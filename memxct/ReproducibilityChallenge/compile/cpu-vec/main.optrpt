Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


Begin optimization report for: main(int, char **)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/cpu/main.cpp(247,17)
   remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(272,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between spatll (274:27) and spatll->_M_value[spatcount] (274:27)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(272,3)
<Remainder>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(281,17)
   remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(306,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between specll (308:27) and specll->_M_value[speccount] (308:27)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(306,3)
<Remainder>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(331,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between specstart[p] (333:5) and specstart[p-1] (333:5)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(331,3)
<Remainder>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(335,3)
<Peeled loop for vectorization, Distributed chunk1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(335,3)
<Distributed chunk1>
   remark #15301: PARTIAL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(335,3)
<Remainder loop for vectorization, Distributed chunk1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(335,3)
<Peeled loop for vectorization, Distributed chunk2>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(335,3)
<Distributed chunk2>
   remark #15301: PARTIAL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(335,3)
<Remainder loop for vectorization, Distributed chunk2>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(341,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between pixstart[p] (342:5) and pixstart[p-1] (342:5)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(341,3)
<Remainder>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(349,3)
<Peeled loop for vectorization>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(349,3)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(349,3)
<Remainder loop for vectorization>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(354,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(452,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/cpu/main.cpp(471,5)
      remark #15523: loop was not vectorized: loop control variable k was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(476,5)
      remark #15523: loop was not vectorized: loop control variable k was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(487,3)
   remark #15523: loop was not vectorized: loop control variable p was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(500,3)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(540,5)
<Peeled loop for vectorization>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(540,5)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(540,5)
<Remainder loop for vectorization>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(544,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between rowdispl[k] (545:7) and rowdispl[k-1] (545:7)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(544,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(602,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between rowdispl[m] (603:7) and rowdispl[m-1] (603:7)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(602,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(605,5)
<Peeled loop for vectorization>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(605,5)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(605,5)
<Remainder loop for vectorization>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(658,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between blockdispl[block] (659:7) and blockdispl[block-1] (659:7)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(658,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(662,5)
<Peeled loop for vectorization>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(662,5)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(662,5)
<Remainder loop for vectorization>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(703,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between buffmapdispl[n] (704:7) and buffmapdispl[n-1] (704:7)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(703,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(711,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between buffdispl[n] (712:7) and buffdispl[n-1] (712:7)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(711,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(715,5)
<Peeled loop for vectorization>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(715,5)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(715,5)
<Remainder loop for vectorization>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(807,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between blockdispl[block] (808:7) and blockdispl[block-1] (808:7)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(807,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(811,5)
<Peeled loop for vectorization>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(811,5)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(811,5)
<Remainder loop for vectorization>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(852,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between buffmapdispl[n] (853:7) and buffmapdispl[n-1] (853:7)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(852,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(860,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between buffdispl[n] (861:7) and buffdispl[n-1] (861:7)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(860,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(864,5)
<Peeled loop for vectorization>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(864,5)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(864,5)
<Remainder loop for vectorization>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(987,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between raynumray[*(rayrecvlist+k*4)] (988:5) and raynumray[*(rayrecvlist+k*4)] (988:5)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(987,3)
<Remainder>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(991,3)
   remark #15523: loop was not vectorized: loop control variable k was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(996,3)
   remark #15523: loop was not vectorized: loop control variable k was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1113,5)
   remark #15523: loop was not vectorized: loop control variable iter was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(255,3)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(255,3)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(258,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(289,3)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(289,3)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(292,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(362,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(408,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(454,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between domain[0] (460:9) and domain (467:9)

   LOOP BEGIN at ../src/cpu/main.cpp(458,7)
      remark #15523: loop was not vectorized: loop control variable tile was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(501,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between rayrecvstart[p] (503:7) and rayrecvlist[*(rayrecvstart+p*4)+k] (503:7)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(501,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(511,3)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(511,3)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(529,19)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification

   LOOP BEGIN at ../src/cpu/main.cpp(523,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between raycoorout[k] (524:33) and domain (536:9)

      LOOP BEGIN at ../src/cpu/main.cpp(527,7)
         remark #15523: loop was not vectorized: loop control variable tile was found, but loop iteration count cannot be computed before executing the loop
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(568,58)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification

   LOOP BEGIN at ../src/cpu/main.cpp(553,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between raycoorout[k] (554:33) and domain (568:9)

      LOOP BEGIN at ../src/cpu/main.cpp(557,7)
         remark #15523: loop was not vectorized: loop control variable tile was found, but loop iteration count cannot be computed before executing the loop
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(585,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/cpu/main.cpp(586,7)
   <Peeled loop for vectorization>
      remark #15301: PEEL LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(586,7)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(586,7)
   <Remainder loop for vectorization>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(588,5)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/cpu/main.cpp(588,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(588,5)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(591,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between inter (593:7) and inter (594:7)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(597,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/cpu/main.cpp(598,7)
   <Multiversioned v1>
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between inter (599:9) and inter (599:9)
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(598,7)
   <Remainder, Multiversioned v1>
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(598,7)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(598,7)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(614,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between proj_rowindex[n] (616:7) and rowindex (616:7)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(641,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/cpu/main.cpp(642,7)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/cpu/main.cpp(643,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(645,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/cpu/main.cpp(646,11)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between at (647:13) and numint[*(*?+n*4)] (647:13)
         LOOP END

         LOOP BEGIN at ../src/cpu/main.cpp(646,11)
         <Remainder>
         LOOP END
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(649,9)
      <Peeled loop for vectorization>
         remark #15301: PEEL LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(649,9)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(649,9)
      <Remainder loop for vectorization>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(672,7)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/cpu/main.cpp(672,7)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(672,7)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(675,7)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/cpu/main.cpp(675,7)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(675,7)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(678,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/cpu/main.cpp(679,7)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/cpu/main.cpp(680,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(682,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/cpu/main.cpp(683,11)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between at (684:13) and numint[*(*?+n*4)] (684:13)
         LOOP END

         LOOP BEGIN at ../src/cpu/main.cpp(683,11)
         <Remainder>
         LOOP END
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(686,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(695,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/cpu/main.cpp(696,11)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between numint[*(*?+n*4)] (697:13) and at (697:13)
         LOOP END

         LOOP BEGIN at ../src/cpu/main.cpp(696,11)
         <Remainder>
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(726,7)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/cpu/main.cpp(726,7)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(726,7)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(729,7)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/cpu/main.cpp(729,7)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(729,7)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(732,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/cpu/main.cpp(733,7)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/cpu/main.cpp(734,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(736,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/cpu/main.cpp(737,11)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between at (738:13) and numint[*(*?+n*4)] (738:13)
         LOOP END

         LOOP BEGIN at ../src/cpu/main.cpp(737,11)
         <Remainder>
         LOOP END
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(740,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(750,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/cpu/main.cpp(751,11)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between numint[*(*?+n*4)] (752:55) and at (754:13)
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(790,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/cpu/main.cpp(791,7)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/cpu/main.cpp(792,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(794,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/cpu/main.cpp(795,11)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between at (796:13) and numint[*(*?+n*4)] (796:13)
         LOOP END

         LOOP BEGIN at ../src/cpu/main.cpp(795,11)
         <Remainder>
         LOOP END
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(798,9)
      <Peeled loop for vectorization>
         remark #15301: PEEL LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(798,9)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(798,9)
      <Remainder loop for vectorization>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(821,7)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/cpu/main.cpp(821,7)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(821,7)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(824,7)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/cpu/main.cpp(824,7)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(824,7)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(827,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/cpu/main.cpp(828,7)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/cpu/main.cpp(829,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(831,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/cpu/main.cpp(832,11)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between at (833:13) and numint[*(*?+n*4)] (833:13)
         LOOP END

         LOOP BEGIN at ../src/cpu/main.cpp(832,11)
         <Remainder>
         LOOP END
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(835,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(844,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/cpu/main.cpp(845,11)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between numint[*(*?+n*4)] (846:13) and at (846:13)
         LOOP END

         LOOP BEGIN at ../src/cpu/main.cpp(845,11)
         <Remainder>
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(875,7)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/cpu/main.cpp(875,7)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(875,7)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(878,7)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/cpu/main.cpp(878,7)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(878,7)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(881,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/cpu/main.cpp(882,7)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/cpu/main.cpp(883,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(885,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/cpu/main.cpp(886,11)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between at (887:13) and numint[*(*?+n*4)] (887:13)
         LOOP END

         LOOP BEGIN at ../src/cpu/main.cpp(886,11)
         <Remainder>
         LOOP END
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(889,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(899,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/cpu/main.cpp(900,11)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between numint[*(*?+n*4)] (901:55) and at (903:13)
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(929,5)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/cpu/main.cpp(929,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(929,5)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(942,23)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/cpu/main.cpp(933,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between raycoorout[k] (935:35) and domain (946:13)

      LOOP BEGIN at ../src/cpu/main.cpp(934,7)
         remark #15523: loop was not vectorized: loop control variable k was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/cpu/main.cpp(937,9)
            remark #15523: loop was not vectorized: loop control variable buff was found, but loop iteration count cannot be computed before executing the loop

            LOOP BEGIN at ../src/cpu/main.cpp(939,11)
               remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(956,5)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/cpu/main.cpp(956,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(956,5)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(971,25)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/cpu/main.cpp(960,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between pixcoor[n] (963:9) and domain (973:13)

      LOOP BEGIN at ../src/cpu/main.cpp(961,7)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/cpu/main.cpp(967,9)
            remark #15523: loop was not vectorized: loop control variable buff was found, but loop iteration count cannot be computed before executing the loop

            LOOP BEGIN at ../src/cpu/main.cpp(969,11)
               remark #15523: loop was not vectorized: loop control variable k was found, but loop iteration count cannot be computed before executing the loop
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(984,3)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/cpu/main.cpp(984,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(984,3)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(994,3)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/cpu/main.cpp(994,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(994,3)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1047,3)
<Peeled loop for vectorization>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1047,3)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1047,3)
<Remainder loop for vectorization>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1077,3)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/cpu/main.cpp(1077,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(1077,3)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1182,3)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/cpu/main.cpp(1182,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(1182,3)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1185,3)
<Peeled loop for vectorization>
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1185,3)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1185,3)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END
===========================================================================

Begin optimization report for: main(int, char **) [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/cpu/main.cpp(247,17)
   remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(272,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between spatll (274:27) and spatll->_M_value[spatcount] (274:27)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(272,3)
<Remainder>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(281,17)
   remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(306,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between specll (308:27) and specll->_M_value[speccount] (308:27)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(306,3)
<Remainder>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(331,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between specstart[p] (333:5) and specstart[p-1] (333:5)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(331,3)
<Remainder>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(335,3)
<Peeled loop for vectorization, Distributed chunk1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(335,3)
<Distributed chunk1>
   remark #15301: PARTIAL LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(335,3)
<Remainder loop for vectorization, Distributed chunk1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(335,3)
<Peeled loop for vectorization, Distributed chunk2>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(335,3)
<Distributed chunk2>
   remark #15301: PARTIAL LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(335,3)
<Remainder loop for vectorization, Distributed chunk2>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(341,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between pixstart[p] (342:5) and pixstart[p-1] (342:5)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(341,3)
<Remainder>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(349,3)
<Peeled loop for vectorization>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(349,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(349,3)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(354,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(452,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/cpu/main.cpp(471,5)
      remark #15523: loop was not vectorized: loop control variable k was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(476,5)
      remark #15523: loop was not vectorized: loop control variable k was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(487,3)
   remark #15523: loop was not vectorized: loop control variable p was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(500,3)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(540,5)
<Peeled loop for vectorization>
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(540,5)
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(540,5)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(544,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between rowdispl[k] (545:7) and rowdispl[k-1] (545:7)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(544,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(602,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between rowdispl[m] (603:7) and rowdispl[m-1] (603:7)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(602,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(605,5)
<Peeled loop for vectorization>
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(605,5)
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(605,5)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(658,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between blockdispl[block] (659:7) and blockdispl[block-1] (659:7)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(658,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(662,5)
<Peeled loop for vectorization>
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(662,5)
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(662,5)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(703,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between buffmapdispl[n] (704:7) and buffmapdispl[n-1] (704:7)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(703,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(711,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between buffdispl[n] (712:7) and buffdispl[n-1] (712:7)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(711,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(715,5)
<Peeled loop for vectorization>
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(715,5)
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(715,5)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(807,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between blockdispl[block] (808:7) and blockdispl[block-1] (808:7)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(807,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(811,5)
<Peeled loop for vectorization>
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(811,5)
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(811,5)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(852,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between buffmapdispl[n] (853:7) and buffmapdispl[n-1] (853:7)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(852,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(860,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between buffdispl[n] (861:7) and buffdispl[n-1] (861:7)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(860,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(864,5)
<Peeled loop for vectorization>
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(864,5)
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(864,5)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(987,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(987,3)
<Remainder>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(991,3)
   remark #15523: loop was not vectorized: loop control variable k was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(996,3)
   remark #15523: loop was not vectorized: loop control variable k was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1113,5)
   remark #15523: loop was not vectorized: loop control variable iter was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(255,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(255,3)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(258,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(289,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(289,3)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(292,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(362,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(408,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(454,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between domain[0] (460:9) and domain (467:9)

   LOOP BEGIN at ../src/cpu/main.cpp(458,7)
      remark #15523: loop was not vectorized: loop control variable tile was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(501,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between rayrecvstart[p] (503:7) and rayrecvlist[*(rayrecvstart+p*4)+k] (503:7)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(501,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(511,3)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(511,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(511,3)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(529,19)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification

   LOOP BEGIN at ../src/cpu/main.cpp(523,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between raycoorout[k] (524:33) and domain (536:9)

      LOOP BEGIN at ../src/cpu/main.cpp(527,7)
         remark #15523: loop was not vectorized: loop control variable tile was found, but loop iteration count cannot be computed before executing the loop
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(568,58)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification

   LOOP BEGIN at ../src/cpu/main.cpp(553,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between raycoorout[k] (554:33) and domain (568:9)

      LOOP BEGIN at ../src/cpu/main.cpp(557,7)
         remark #15523: loop was not vectorized: loop control variable tile was found, but loop iteration count cannot be computed before executing the loop
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(585,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/cpu/main.cpp(586,7)
   <Peeled loop for vectorization>
      remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(586,7)
      remark #15300: LOOP WAS VECTORIZED
      remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(586,7)
   <Remainder loop for vectorization>
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(588,5)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/cpu/main.cpp(588,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(588,5)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(591,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between inter (593:7) and inter (594:7)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(597,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/cpu/main.cpp(598,7)
   <Multiversioned v1>
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between inter (599:9) and inter (599:9)
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(598,7)
   <Remainder, Multiversioned v1>
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(598,7)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(598,7)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(614,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between proj_rowindex[n] (616:7) and rowindex (616:7)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(641,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/cpu/main.cpp(642,7)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/cpu/main.cpp(643,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(645,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/cpu/main.cpp(646,11)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between at (647:13) and numint[*(*?+n*4)] (647:13)
         LOOP END

         LOOP BEGIN at ../src/cpu/main.cpp(646,11)
         <Remainder>
         LOOP END
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(649,9)
      <Peeled loop for vectorization>
         remark #15301: PEEL LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(649,9)
         remark #15300: LOOP WAS VECTORIZED
         remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(649,9)
      <Remainder loop for vectorization>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(672,7)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/cpu/main.cpp(672,7)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(672,7)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(675,7)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/cpu/main.cpp(675,7)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(675,7)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(678,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/cpu/main.cpp(679,7)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/cpu/main.cpp(680,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(682,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/cpu/main.cpp(683,11)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between at (684:13) and numint[*(*?+n*4)] (684:13)
         LOOP END

         LOOP BEGIN at ../src/cpu/main.cpp(683,11)
         <Remainder>
         LOOP END
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(686,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(695,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/cpu/main.cpp(696,11)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between numint[*(*?+n*4)] (697:13) and at (697:13)
         LOOP END

         LOOP BEGIN at ../src/cpu/main.cpp(696,11)
         <Remainder>
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(726,7)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/cpu/main.cpp(726,7)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(726,7)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(729,7)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/cpu/main.cpp(729,7)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(729,7)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(732,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/cpu/main.cpp(733,7)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/cpu/main.cpp(734,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(736,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/cpu/main.cpp(737,11)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between at (738:13) and numint[*(*?+n*4)] (738:13)
         LOOP END

         LOOP BEGIN at ../src/cpu/main.cpp(737,11)
         <Remainder>
         LOOP END
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(740,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(750,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/cpu/main.cpp(751,11)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between numint[*(*?+n*4)] (752:55) and at (754:13)
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(790,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/cpu/main.cpp(791,7)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/cpu/main.cpp(792,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(794,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/cpu/main.cpp(795,11)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between at (796:13) and numint[*(*?+n*4)] (796:13)
         LOOP END

         LOOP BEGIN at ../src/cpu/main.cpp(795,11)
         <Remainder>
         LOOP END
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(798,9)
      <Peeled loop for vectorization>
         remark #15301: PEEL LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(798,9)
         remark #15300: LOOP WAS VECTORIZED
         remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(798,9)
      <Remainder loop for vectorization>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(821,7)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/cpu/main.cpp(821,7)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(821,7)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(824,7)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/cpu/main.cpp(824,7)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(824,7)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(827,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/cpu/main.cpp(828,7)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/cpu/main.cpp(829,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(831,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/cpu/main.cpp(832,11)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between at (833:13) and numint[*(*?+n*4)] (833:13)
         LOOP END

         LOOP BEGIN at ../src/cpu/main.cpp(832,11)
         <Remainder>
         LOOP END
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(835,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(844,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/cpu/main.cpp(845,11)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between numint[*(*?+n*4)] (846:13) and at (846:13)
         LOOP END

         LOOP BEGIN at ../src/cpu/main.cpp(845,11)
         <Remainder>
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(875,7)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/cpu/main.cpp(875,7)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(875,7)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(878,7)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/cpu/main.cpp(878,7)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(878,7)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(881,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/cpu/main.cpp(882,7)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/cpu/main.cpp(883,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(885,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/cpu/main.cpp(886,11)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between at (887:13) and numint[*(*?+n*4)] (887:13)
         LOOP END

         LOOP BEGIN at ../src/cpu/main.cpp(886,11)
         <Remainder>
         LOOP END
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(889,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(899,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/cpu/main.cpp(900,11)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between numint[*(*?+n*4)] (901:55) and at (903:13)
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(929,5)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/cpu/main.cpp(929,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(929,5)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(942,23)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/cpu/main.cpp(933,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between raycoorout[k] (935:35) and domain (946:13)

      LOOP BEGIN at ../src/cpu/main.cpp(934,7)
         remark #15523: loop was not vectorized: loop control variable k was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/cpu/main.cpp(937,9)
            remark #15523: loop was not vectorized: loop control variable buff was found, but loop iteration count cannot be computed before executing the loop

            LOOP BEGIN at ../src/cpu/main.cpp(939,11)
               remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(956,5)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/cpu/main.cpp(956,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(956,5)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(971,25)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/cpu/main.cpp(960,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between pixcoor[n] (963:9) and domain (973:13)

      LOOP BEGIN at ../src/cpu/main.cpp(961,7)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/cpu/main.cpp(967,9)
            remark #15523: loop was not vectorized: loop control variable buff was found, but loop iteration count cannot be computed before executing the loop

            LOOP BEGIN at ../src/cpu/main.cpp(969,11)
               remark #15523: loop was not vectorized: loop control variable k was found, but loop iteration count cannot be computed before executing the loop
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(984,3)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/cpu/main.cpp(984,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(984,3)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(994,3)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/cpu/main.cpp(994,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(994,3)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1047,3)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1047,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1047,3)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1077,3)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/cpu/main.cpp(1077,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(1077,3)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1182,3)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/cpu/main.cpp(1182,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(1182,3)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1185,3)
<Peeled loop for vectorization>
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1185,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1185,3)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END
===========================================================================

Begin optimization report for: main(int, char **) [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/cpu/main.cpp(247,17)
   remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(272,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between spatll (274:27) and spatll->_M_value[spatcount] (274:27)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(272,3)
<Remainder>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(281,17)
   remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(306,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between specll (308:27) and specll->_M_value[speccount] (308:27)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(306,3)
<Remainder>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(331,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between specstart[p] (333:5) and specstart[p-1] (333:5)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(331,3)
<Remainder>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(335,3)
<Peeled loop for vectorization, Distributed chunk1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(335,3)
<Distributed chunk1>
   remark #15301: PARTIAL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(335,3)
<Remainder loop for vectorization, Distributed chunk1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(335,3)
<Peeled loop for vectorization, Distributed chunk2>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(335,3)
<Distributed chunk2>
   remark #15301: PARTIAL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(335,3)
<Remainder loop for vectorization, Distributed chunk2>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(341,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between pixstart[p] (342:5) and pixstart[p-1] (342:5)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(341,3)
<Remainder>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(349,3)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(349,3)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(349,3)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(354,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(452,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/cpu/main.cpp(471,5)
      remark #15523: loop was not vectorized: loop control variable k was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(476,5)
      remark #15523: loop was not vectorized: loop control variable k was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(487,3)
   remark #15523: loop was not vectorized: loop control variable p was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(500,3)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(540,5)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(540,5)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(540,5)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(544,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between rowdispl[k] (545:7) and rowdispl[k-1] (545:7)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(544,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(602,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between rowdispl[m] (603:7) and rowdispl[m-1] (603:7)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(602,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(605,5)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(605,5)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(605,5)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(658,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between blockdispl[block] (659:7) and blockdispl[block-1] (659:7)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(658,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(662,5)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(662,5)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(662,5)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(703,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between buffmapdispl[n] (704:7) and buffmapdispl[n-1] (704:7)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(703,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(711,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between buffdispl[n] (712:7) and buffdispl[n-1] (712:7)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(711,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(715,5)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(715,5)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(715,5)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(807,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between blockdispl[block] (808:7) and blockdispl[block-1] (808:7)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(807,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(811,5)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(811,5)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(811,5)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(852,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between buffmapdispl[n] (853:7) and buffmapdispl[n-1] (853:7)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(852,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(860,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between buffdispl[n] (861:7) and buffdispl[n-1] (861:7)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(860,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(864,5)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(864,5)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(864,5)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(987,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between raynumray[*(rayrecvlist+k*4)] (988:5) and raynumray[*(rayrecvlist+k*4)] (988:5)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(987,3)
<Remainder>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(991,3)
   remark #15523: loop was not vectorized: loop control variable k was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(996,3)
   remark #15523: loop was not vectorized: loop control variable k was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1113,5)
   remark #15523: loop was not vectorized: loop control variable iter was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(255,3)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(255,3)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(258,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(289,3)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(289,3)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(292,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(362,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(408,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(454,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between domain[0] (460:9) and domain (467:9)

   LOOP BEGIN at ../src/cpu/main.cpp(458,7)
      remark #15523: loop was not vectorized: loop control variable tile was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(501,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between rayrecvstart[p] (503:7) and rayrecvlist[*(rayrecvstart+p*4)+k] (503:7)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(501,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(511,3)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(511,3)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(511,3)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(529,19)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification

   LOOP BEGIN at ../src/cpu/main.cpp(523,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between raycoorout[k] (524:33) and domain (536:9)

      LOOP BEGIN at ../src/cpu/main.cpp(527,7)
         remark #15523: loop was not vectorized: loop control variable tile was found, but loop iteration count cannot be computed before executing the loop
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(568,58)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification

   LOOP BEGIN at ../src/cpu/main.cpp(553,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between raycoorout[k] (554:33) and domain (568:9)

      LOOP BEGIN at ../src/cpu/main.cpp(557,7)
         remark #15523: loop was not vectorized: loop control variable tile was found, but loop iteration count cannot be computed before executing the loop
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(585,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/cpu/main.cpp(586,7)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(586,7)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(586,7)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(588,5)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/cpu/main.cpp(588,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(588,5)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(591,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between inter (593:7) and inter (594:7)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(597,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/cpu/main.cpp(598,7)
   <Multiversioned v1>
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between inter (599:9) and inter (599:9)
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(598,7)
   <Remainder, Multiversioned v1>
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(598,7)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(598,7)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(614,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between proj_rowindex[n] (616:7) and rowindex (616:7)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(641,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/cpu/main.cpp(642,7)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/cpu/main.cpp(643,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(645,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/cpu/main.cpp(646,11)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between at (647:13) and numint[*(*?+n*4)] (647:13)
         LOOP END

         LOOP BEGIN at ../src/cpu/main.cpp(646,11)
         <Remainder>
         LOOP END
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(649,9)
      <Peeled loop for vectorization>
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(649,9)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(649,9)
      <Remainder loop for vectorization>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(649,9)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(672,7)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/cpu/main.cpp(672,7)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(672,7)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(675,7)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/cpu/main.cpp(675,7)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(675,7)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(678,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/cpu/main.cpp(679,7)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/cpu/main.cpp(680,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(682,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/cpu/main.cpp(683,11)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between at (684:13) and numint[*(*?+n*4)] (684:13)
         LOOP END

         LOOP BEGIN at ../src/cpu/main.cpp(683,11)
         <Remainder>
         LOOP END
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(686,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(695,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/cpu/main.cpp(696,11)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between numint[*(*?+n*4)] (697:13) and at (697:13)
         LOOP END

         LOOP BEGIN at ../src/cpu/main.cpp(696,11)
         <Remainder>
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(726,7)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/cpu/main.cpp(726,7)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(726,7)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(729,7)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/cpu/main.cpp(729,7)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(729,7)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(732,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/cpu/main.cpp(733,7)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/cpu/main.cpp(734,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(736,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/cpu/main.cpp(737,11)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between at (738:13) and numint[*(*?+n*4)] (738:13)
         LOOP END

         LOOP BEGIN at ../src/cpu/main.cpp(737,11)
         <Remainder>
         LOOP END
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(740,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(750,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/cpu/main.cpp(751,11)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between numint[*(*?+n*4)] (752:55) and at (754:13)
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(790,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/cpu/main.cpp(791,7)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/cpu/main.cpp(792,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(794,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/cpu/main.cpp(795,11)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between at (796:13) and numint[*(*?+n*4)] (796:13)
         LOOP END

         LOOP BEGIN at ../src/cpu/main.cpp(795,11)
         <Remainder>
         LOOP END
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(798,9)
      <Peeled loop for vectorization>
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(798,9)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(798,9)
      <Remainder loop for vectorization>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(798,9)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(821,7)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/cpu/main.cpp(821,7)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(821,7)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(824,7)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/cpu/main.cpp(824,7)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(824,7)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(827,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/cpu/main.cpp(828,7)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/cpu/main.cpp(829,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(831,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/cpu/main.cpp(832,11)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between at (833:13) and numint[*(*?+n*4)] (833:13)
         LOOP END

         LOOP BEGIN at ../src/cpu/main.cpp(832,11)
         <Remainder>
         LOOP END
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(835,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(844,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/cpu/main.cpp(845,11)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between numint[*(*?+n*4)] (846:13) and at (846:13)
         LOOP END

         LOOP BEGIN at ../src/cpu/main.cpp(845,11)
         <Remainder>
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(875,7)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/cpu/main.cpp(875,7)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(875,7)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(878,7)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/cpu/main.cpp(878,7)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(878,7)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(881,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/cpu/main.cpp(882,7)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/cpu/main.cpp(883,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(885,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/cpu/main.cpp(886,11)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between at (887:13) and numint[*(*?+n*4)] (887:13)
         LOOP END

         LOOP BEGIN at ../src/cpu/main.cpp(886,11)
         <Remainder>
         LOOP END
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(889,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(899,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/cpu/main.cpp(900,11)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between numint[*(*?+n*4)] (901:55) and at (903:13)
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(929,5)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/cpu/main.cpp(929,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(929,5)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(942,23)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/cpu/main.cpp(933,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between raycoorout[k] (935:35) and domain (946:13)

      LOOP BEGIN at ../src/cpu/main.cpp(934,7)
         remark #15523: loop was not vectorized: loop control variable k was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/cpu/main.cpp(937,9)
            remark #15523: loop was not vectorized: loop control variable buff was found, but loop iteration count cannot be computed before executing the loop

            LOOP BEGIN at ../src/cpu/main.cpp(939,11)
               remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(956,5)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/cpu/main.cpp(956,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(956,5)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(971,25)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/cpu/main.cpp(960,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between pixcoor[n] (963:9) and domain (973:13)

      LOOP BEGIN at ../src/cpu/main.cpp(961,7)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/cpu/main.cpp(967,9)
            remark #15523: loop was not vectorized: loop control variable buff was found, but loop iteration count cannot be computed before executing the loop

            LOOP BEGIN at ../src/cpu/main.cpp(969,11)
               remark #15523: loop was not vectorized: loop control variable k was found, but loop iteration count cannot be computed before executing the loop
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(984,3)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/cpu/main.cpp(984,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(984,3)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(994,3)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/cpu/main.cpp(994,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(994,3)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1047,3)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1047,3)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1047,3)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1077,3)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/cpu/main.cpp(1077,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(1077,3)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1182,3)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/cpu/main.cpp(1182,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(1182,3)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1185,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1185,3)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: main(int, char **) [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/cpu/main.cpp(247,17)
   remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(272,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between spatll (274:27) and spatll->_M_value[spatcount] (274:27)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(272,3)
<Remainder>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(281,17)
   remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(306,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between specll (308:27) and specll->_M_value[speccount] (308:27)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(306,3)
<Remainder>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(331,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between specstart[p] (333:5) and specstart[p-1] (333:5)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(331,3)
<Remainder>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(335,3)
<Peeled loop for vectorization, Distributed chunk1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(335,3)
<Distributed chunk1>
   remark #15301: PARTIAL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(335,3)
<Alternate Alignment Vectorized Loop, Distributed chunk1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(335,3)
<Remainder loop for vectorization, Distributed chunk1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(335,3)
<Peeled loop for vectorization, Distributed chunk2>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(335,3)
<Distributed chunk2>
   remark #15301: PARTIAL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(335,3)
<Alternate Alignment Vectorized Loop, Distributed chunk2>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(335,3)
<Remainder loop for vectorization, Distributed chunk2>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(341,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between pixstart[p] (342:5) and pixstart[p-1] (342:5)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(341,3)
<Remainder>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(349,3)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(349,3)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(349,3)
<Alternate Alignment Vectorized Loop>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(349,3)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(354,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(452,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/cpu/main.cpp(471,5)
      remark #15523: loop was not vectorized: loop control variable k was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(476,5)
      remark #15523: loop was not vectorized: loop control variable k was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(487,3)
   remark #15523: loop was not vectorized: loop control variable p was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(500,3)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(540,5)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(540,5)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(540,5)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(544,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between rowdispl[k] (545:7) and rowdispl[k-1] (545:7)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(544,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(602,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between rowdispl[m] (603:7) and rowdispl[m-1] (603:7)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(602,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(605,5)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(605,5)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(605,5)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(658,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between blockdispl[block] (659:7) and blockdispl[block-1] (659:7)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(658,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(662,5)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(662,5)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(662,5)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(703,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between buffmapdispl[n] (704:7) and buffmapdispl[n-1] (704:7)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(703,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(711,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between buffdispl[n] (712:7) and buffdispl[n-1] (712:7)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(711,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(715,5)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(715,5)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(715,5)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(807,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between blockdispl[block] (808:7) and blockdispl[block-1] (808:7)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(807,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(811,5)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(811,5)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(811,5)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(852,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between buffmapdispl[n] (853:7) and buffmapdispl[n-1] (853:7)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(852,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(860,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between buffdispl[n] (861:7) and buffdispl[n-1] (861:7)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(860,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(864,5)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(864,5)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(864,5)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(987,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between raynumray[*(rayrecvlist+k*4)] (988:5) and raynumray[*(rayrecvlist+k*4)] (988:5)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(987,3)
<Remainder>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(991,3)
   remark #15523: loop was not vectorized: loop control variable k was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(996,3)
   remark #15523: loop was not vectorized: loop control variable k was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1113,5)
   remark #15523: loop was not vectorized: loop control variable iter was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(255,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(255,3)
<Remainder>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(258,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(289,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(289,3)
<Remainder>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(292,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(362,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(408,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(454,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between domain[0] (460:9) and domain (467:9)

   LOOP BEGIN at ../src/cpu/main.cpp(458,7)
      remark #15523: loop was not vectorized: loop control variable tile was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(501,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between rayrecvstart[p] (503:7) and rayrecvlist[*(rayrecvstart+p*4)+k] (503:7)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(501,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(511,3)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(511,3)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(511,3)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(529,19)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification

   LOOP BEGIN at ../src/cpu/main.cpp(523,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between raycoorout[k] (524:33) and domain (536:9)

      LOOP BEGIN at ../src/cpu/main.cpp(527,7)
         remark #15523: loop was not vectorized: loop control variable tile was found, but loop iteration count cannot be computed before executing the loop
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(568,58)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification

   LOOP BEGIN at ../src/cpu/main.cpp(553,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between raycoorout[k] (554:33) and domain (568:9)

      LOOP BEGIN at ../src/cpu/main.cpp(557,7)
         remark #15523: loop was not vectorized: loop control variable tile was found, but loop iteration count cannot be computed before executing the loop
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(585,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/cpu/main.cpp(586,7)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(586,7)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(586,7)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(588,5)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/cpu/main.cpp(588,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(588,5)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(591,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between inter (593:7) and inter (594:7)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(597,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/cpu/main.cpp(598,7)
   <Multiversioned v1>
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between inter (599:9) and inter (599:9)
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(598,7)
   <Remainder, Multiversioned v1>
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(598,7)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(598,7)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(614,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between proj_rowindex[n] (616:7) and rowindex (616:7)
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(641,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/cpu/main.cpp(642,7)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/cpu/main.cpp(643,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(645,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/cpu/main.cpp(646,11)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between at (647:13) and numint[*(*?+n*4)] (647:13)
         LOOP END

         LOOP BEGIN at ../src/cpu/main.cpp(646,11)
         <Remainder>
         LOOP END
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(649,9)
      <Peeled loop for vectorization>
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(649,9)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(649,9)
      <Remainder loop for vectorization>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(649,9)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(672,7)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/cpu/main.cpp(672,7)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(672,7)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(675,7)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/cpu/main.cpp(675,7)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(675,7)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(678,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/cpu/main.cpp(679,7)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/cpu/main.cpp(680,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(682,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/cpu/main.cpp(683,11)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between at (684:13) and numint[*(*?+n*4)] (684:13)
         LOOP END

         LOOP BEGIN at ../src/cpu/main.cpp(683,11)
         <Remainder>
         LOOP END
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(686,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(695,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/cpu/main.cpp(696,11)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between numint[*(*?+n*4)] (697:13) and at (697:13)
         LOOP END

         LOOP BEGIN at ../src/cpu/main.cpp(696,11)
         <Remainder>
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(726,7)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/cpu/main.cpp(726,7)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(726,7)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(729,7)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/cpu/main.cpp(729,7)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(729,7)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(732,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/cpu/main.cpp(733,7)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/cpu/main.cpp(734,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(736,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/cpu/main.cpp(737,11)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between at (738:13) and numint[*(*?+n*4)] (738:13)
         LOOP END

         LOOP BEGIN at ../src/cpu/main.cpp(737,11)
         <Remainder>
         LOOP END
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(740,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(750,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/cpu/main.cpp(751,11)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between numint[*(*?+n*4)] (752:55) and at (754:13)
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(790,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/cpu/main.cpp(791,7)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/cpu/main.cpp(792,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(794,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/cpu/main.cpp(795,11)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between at (796:13) and numint[*(*?+n*4)] (796:13)
         LOOP END

         LOOP BEGIN at ../src/cpu/main.cpp(795,11)
         <Remainder>
         LOOP END
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(798,9)
      <Peeled loop for vectorization>
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(798,9)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(798,9)
      <Remainder loop for vectorization>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(798,9)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(821,7)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/cpu/main.cpp(821,7)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(821,7)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(824,7)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/cpu/main.cpp(824,7)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(824,7)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(827,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/cpu/main.cpp(828,7)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/cpu/main.cpp(829,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(831,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/cpu/main.cpp(832,11)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between at (833:13) and numint[*(*?+n*4)] (833:13)
         LOOP END

         LOOP BEGIN at ../src/cpu/main.cpp(832,11)
         <Remainder>
         LOOP END
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(835,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(844,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/cpu/main.cpp(845,11)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between numint[*(*?+n*4)] (846:13) and at (846:13)
         LOOP END

         LOOP BEGIN at ../src/cpu/main.cpp(845,11)
         <Remainder>
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(875,7)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/cpu/main.cpp(875,7)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(875,7)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(878,7)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/cpu/main.cpp(878,7)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(878,7)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(881,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/cpu/main.cpp(882,7)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/cpu/main.cpp(883,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(885,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/cpu/main.cpp(886,11)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between at (887:13) and numint[*(*?+n*4)] (887:13)
         LOOP END

         LOOP BEGIN at ../src/cpu/main.cpp(886,11)
         <Remainder>
         LOOP END
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(889,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/cpu/main.cpp(899,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/cpu/main.cpp(900,11)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between numint[*(*?+n*4)] (901:55) and at (903:13)
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(929,5)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/cpu/main.cpp(929,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(929,5)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(942,23)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/cpu/main.cpp(933,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between raycoorout[k] (935:35) and domain (946:13)

      LOOP BEGIN at ../src/cpu/main.cpp(934,7)
         remark #15523: loop was not vectorized: loop control variable k was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/cpu/main.cpp(937,9)
            remark #15523: loop was not vectorized: loop control variable buff was found, but loop iteration count cannot be computed before executing the loop

            LOOP BEGIN at ../src/cpu/main.cpp(939,11)
               remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(956,5)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/cpu/main.cpp(956,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(956,5)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(971,25)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/cpu/main.cpp(960,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between pixcoor[n] (963:9) and domain (973:13)

      LOOP BEGIN at ../src/cpu/main.cpp(961,7)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/cpu/main.cpp(967,9)
            remark #15523: loop was not vectorized: loop control variable buff was found, but loop iteration count cannot be computed before executing the loop

            LOOP BEGIN at ../src/cpu/main.cpp(969,11)
               remark #15523: loop was not vectorized: loop control variable k was found, but loop iteration count cannot be computed before executing the loop
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(984,3)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/cpu/main.cpp(984,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(984,3)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(994,3)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/cpu/main.cpp(994,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(994,3)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1047,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1047,3)
<Remainder>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1077,3)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/cpu/main.cpp(1077,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(1077,3)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1182,3)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/cpu/main.cpp(1182,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/cpu/main.cpp(1182,3)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1185,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1185,3)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: subtract_kernel(float *, float *, float *, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/cpu/main.cpp(1226,3)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1226,3)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1226,3)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1226,3)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1226,3)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: subtract_kernel(float *, float *, float *, int) [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/cpu/main.cpp(1226,3)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1226,3)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1226,3)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1226,3)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1226,3)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: subtract_kernel(float *, float *, float *, int) [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/cpu/main.cpp(1226,3)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1226,3)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1226,3)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1226,3)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1226,3)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: subtract_kernel(float *, float *, float *, int) [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/cpu/main.cpp(1226,3)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1226,3)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1226,3)
<Alternate Alignment Vectorized Loop, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1226,3)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1226,3)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1226,3)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: saxpy_kernel(float *, float *, float, float *, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/cpu/main.cpp(1216,3)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1216,3)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1216,3)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1216,3)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1216,3)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: saxpy_kernel(float *, float *, float, float *, int) [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/cpu/main.cpp(1216,3)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1216,3)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1216,3)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1216,3)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1216,3)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: saxpy_kernel(float *, float *, float, float *, int) [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/cpu/main.cpp(1216,3)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1216,3)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1216,3)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1216,3)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1216,3)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: saxpy_kernel(float *, float *, float, float *, int) [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/cpu/main.cpp(1216,3)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1216,3)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1216,3)
<Alternate Alignment Vectorized Loop, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1216,3)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1216,3)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1216,3)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: norm_kernel(float *, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/cpu/main.cpp(1203,3)
<Peeled loop for vectorization>
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1203,3)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1203,3)
<Remainder loop for vectorization>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END
===========================================================================

Begin optimization report for: norm_kernel(float *, int) [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/cpu/main.cpp(1203,3)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1203,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1203,3)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END
===========================================================================

Begin optimization report for: norm_kernel(float *, int) [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/cpu/main.cpp(1203,3)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1203,3)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1203,3)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END
===========================================================================

Begin optimization report for: norm_kernel(float *, int) [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/cpu/main.cpp(1203,3)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1203,3)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1203,3)
<Remainder loop for vectorization>
LOOP END
===========================================================================

Begin optimization report for: dot_kernel(float *, float *, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/cpu/main.cpp(1210,3)
<Peeled loop for vectorization>
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1210,3)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1210,3)
<Remainder loop for vectorization>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END
===========================================================================

Begin optimization report for: dot_kernel(float *, float *, int) [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/cpu/main.cpp(1210,3)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1210,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1210,3)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END
===========================================================================

Begin optimization report for: dot_kernel(float *, float *, int) [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/cpu/main.cpp(1210,3)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1210,3)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1210,3)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END
===========================================================================

Begin optimization report for: dot_kernel(float *, float *, int) [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/cpu/main.cpp(1210,3)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1210,3)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1210,3)
<Alternate Alignment Vectorized Loop>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1210,3)
<Remainder loop for vectorization>
LOOP END
===========================================================================

Begin optimization report for: __$U0

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U0 [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U0 [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U0 [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U1

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U1 [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U1 [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U1 [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U2

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U2 [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U2 [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U2 [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U3

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U3 [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U3 [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U3 [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U4

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U4 [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U4 [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U4 [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U5

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U5 [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U5 [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U5 [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U6

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U6 [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U6 [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U6 [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U7

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U7 [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U7 [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U7 [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1200,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: copy_kernel(float *, float *, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/cpu/main.cpp(1221,3)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1221,3)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1221,3)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1221,3)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1221,3)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: copy_kernel(float *, float *, int) [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/cpu/main.cpp(1221,3)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1221,3)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1221,3)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1221,3)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1221,3)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: copy_kernel(float *, float *, int) [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/cpu/main.cpp(1221,3)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1221,3)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1221,3)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1221,3)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1221,3)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: copy_kernel(float *, float *, int) [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/cpu/main.cpp(1221,3)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1221,3)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1221,3)
<Alternate Alignment Vectorized Loop, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1221,3)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1221,3)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/cpu/main.cpp(1221,3)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================
