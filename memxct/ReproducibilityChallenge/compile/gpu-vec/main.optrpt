Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


Begin optimization report for: main(int, char **)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/gpu/main.cpp(242,17)
   remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(267,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between spatll (269:27) and spatll->_M_value[spatcount] (269:27)
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(267,3)
<Remainder>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(276,17)
   remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(301,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between specll (303:27) and specll->_M_value[speccount] (303:27)
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(301,3)
<Remainder>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(324,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between specstart[p] (326:5) and specstart[p-1] (326:5)
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(324,3)
<Remainder>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(328,3)
<Peeled loop for vectorization, Distributed chunk1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(328,3)
<Distributed chunk1>
   remark #15301: PARTIAL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(328,3)
<Remainder loop for vectorization, Distributed chunk1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(328,3)
<Peeled loop for vectorization, Distributed chunk2>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(328,3)
<Distributed chunk2>
   remark #15301: PARTIAL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(328,3)
<Remainder loop for vectorization, Distributed chunk2>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(334,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between pixstart[p] (335:5) and pixstart[p-1] (335:5)
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(334,3)
<Remainder>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(342,3)
<Peeled loop for vectorization>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(342,3)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(342,3)
<Remainder loop for vectorization>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(347,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(443,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/gpu/main.cpp(462,5)
      remark #15523: loop was not vectorized: loop control variable k was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(467,5)
      remark #15523: loop was not vectorized: loop control variable k was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(478,3)
   remark #15523: loop was not vectorized: loop control variable p was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(491,3)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(531,5)
<Peeled loop for vectorization>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(531,5)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(531,5)
<Remainder loop for vectorization>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(535,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between rowdispl[k] (536:7) and rowdispl[k-1] (536:7)
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(535,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(594,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between rowdispl[m] (595:7) and rowdispl[m-1] (595:7)
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(594,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(597,5)
<Peeled loop for vectorization>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(597,5)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(597,5)
<Remainder loop for vectorization>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(653,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between blockdispl[block] (654:7) and blockdispl[block-1] (654:7)
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(653,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(656,5)
<Peeled loop for vectorization>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(656,5)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(656,5)
<Remainder loop for vectorization>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(710,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between buffdispl[buff] (711:7) and buffdispl[buff-1] (711:7)
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(710,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(713,5)
<Peeled loop for vectorization>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(713,5)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(713,5)
<Remainder loop for vectorization>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(805,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between blockdispl[block] (806:7) and blockdispl[block-1] (806:7)
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(805,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(808,5)
<Peeled loop for vectorization>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(808,5)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(808,5)
<Remainder loop for vectorization>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(862,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between buffdispl[buff] (863:7) and buffdispl[buff-1] (863:7)
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(862,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(865,5)
<Peeled loop for vectorization>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(865,5)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(865,5)
<Remainder loop for vectorization>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1008,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between raynumray[*(rayrecvlist+k*4)] (1009:5) and raynumray[*(rayrecvlist+k*4)] (1009:5)
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1008,3)
<Remainder>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1012,3)
   remark #15523: loop was not vectorized: loop control variable k was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1017,3)
   remark #15523: loop was not vectorized: loop control variable k was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1132,5)
   remark #15523: loop was not vectorized: loop control variable iter was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(250,3)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(250,3)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(253,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(284,3)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(284,3)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(287,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(355,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(399,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(445,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between domain[0] (451:9) and domain (458:9)

   LOOP BEGIN at ../src/gpu/main.cpp(449,7)
      remark #15523: loop was not vectorized: loop control variable tile was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(492,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between rayrecvstart[p] (494:7) and rayrecvlist[*(rayrecvstart+p*4)+k] (494:7)
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(492,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(502,3)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(502,3)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(520,19)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification

   LOOP BEGIN at ../src/gpu/main.cpp(514,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between raycoorout[k] (515:33) and domain (527:9)

      LOOP BEGIN at ../src/gpu/main.cpp(518,7)
         remark #15523: loop was not vectorized: loop control variable tile was found, but loop iteration count cannot be computed before executing the loop
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(559,58)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification

   LOOP BEGIN at ../src/gpu/main.cpp(544,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between raycoorout[k] (545:33) and domain (559:9)

      LOOP BEGIN at ../src/gpu/main.cpp(548,7)
         remark #15523: loop was not vectorized: loop control variable tile was found, but loop iteration count cannot be computed before executing the loop
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(577,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/gpu/main.cpp(578,7)
   <Peeled loop for vectorization>
      remark #15301: PEEL LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(578,7)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(578,7)
   <Remainder loop for vectorization>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(580,5)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/gpu/main.cpp(580,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(580,5)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(583,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between inter (585:7) and inter (586:7)
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(589,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/gpu/main.cpp(590,7)
   <Multiversioned v1>
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between inter (591:9) and inter (591:9)
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(590,7)
   <Remainder, Multiversioned v1>
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(590,7)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(590,7)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(606,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between proj_rowindex[n] (608:7) and rowindex (608:7)
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(606,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(636,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/gpu/main.cpp(637,7)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/gpu/main.cpp(638,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(640,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/gpu/main.cpp(641,11)
            remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
         LOOP END
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(644,9)
      <Peeled loop for vectorization>
         remark #15301: PEEL LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(644,9)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(644,9)
      <Remainder loop for vectorization>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(671,7)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/gpu/main.cpp(671,7)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(671,7)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(674,7)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/gpu/main.cpp(674,7)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(674,7)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(677,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/gpu/main.cpp(678,7)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/gpu/main.cpp(679,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(681,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/gpu/main.cpp(682,11)
            remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
         LOOP END
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(685,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(695,9)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at ../src/gpu/main.cpp(696,11)
            remark #15542: loop was not vectorized: inner loop was already vectorized

            LOOP BEGIN at ../src/gpu/main.cpp(696,11)
               remark #15300: LOOP WAS VECTORIZED
            LOOP END

            LOOP BEGIN at ../src/gpu/main.cpp(696,11)
            <Remainder loop for vectorization>
               remark #15301: REMAINDER LOOP WAS VECTORIZED
            LOOP END
         LOOP END

         LOOP BEGIN at ../src/gpu/main.cpp(698,11)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed FLOW dependence between buffnztemp[*(numint+(*(*?+n*4))*4)] (699:13) and buffnztemp[*(numint+(*(*?+n*4))*4)] (699:13)
         LOOP END

         LOOP BEGIN at ../src/gpu/main.cpp(698,11)
         <Remainder>
         LOOP END

         LOOP BEGIN at ../src/gpu/main.cpp(700,11)
         <Peeled loop for vectorization>
            remark #15301: PEEL LOOP WAS VECTORIZED
         LOOP END

         LOOP BEGIN at ../src/gpu/main.cpp(700,11)
            remark #15300: LOOP WAS VECTORIZED
         LOOP END

         LOOP BEGIN at ../src/gpu/main.cpp(700,11)
         <Remainder loop for vectorization>
            remark #15301: REMAINDER LOOP WAS VECTORIZED
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(727,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/gpu/main.cpp(727,7)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(727,7)
   <Remainder loop for vectorization>
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(730,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/gpu/main.cpp(731,7)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/gpu/main.cpp(732,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(734,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/gpu/main.cpp(735,11)
            remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
         LOOP END
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(738,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(745,9)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at ../src/gpu/main.cpp(746,11)
            remark #15542: loop was not vectorized: inner loop was already vectorized

            LOOP BEGIN at ../src/gpu/main.cpp(746,11)
               remark #15300: LOOP WAS VECTORIZED
            LOOP END

            LOOP BEGIN at ../src/gpu/main.cpp(746,11)
            <Remainder loop for vectorization>
               remark #15301: REMAINDER LOOP WAS VECTORIZED
            LOOP END
         LOOP END

         LOOP BEGIN at ../src/gpu/main.cpp(748,11)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between buffnztemp[buffloc] (751:13) and buffnztemp[buffloc] (752:13)
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(788,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/gpu/main.cpp(789,7)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/gpu/main.cpp(790,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(792,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/gpu/main.cpp(793,11)
            remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
         LOOP END
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(796,9)
      <Peeled loop for vectorization>
         remark #15301: PEEL LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(796,9)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(796,9)
      <Remainder loop for vectorization>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(823,7)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/gpu/main.cpp(823,7)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(823,7)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(826,7)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/gpu/main.cpp(826,7)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(826,7)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(829,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/gpu/main.cpp(830,7)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/gpu/main.cpp(831,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(833,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/gpu/main.cpp(834,11)
            remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
         LOOP END
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(837,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(847,9)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at ../src/gpu/main.cpp(848,11)
            remark #15542: loop was not vectorized: inner loop was already vectorized

            LOOP BEGIN at ../src/gpu/main.cpp(848,11)
               remark #15300: LOOP WAS VECTORIZED
            LOOP END

            LOOP BEGIN at ../src/gpu/main.cpp(848,11)
            <Remainder loop for vectorization>
               remark #15301: REMAINDER LOOP WAS VECTORIZED
            LOOP END
         LOOP END

         LOOP BEGIN at ../src/gpu/main.cpp(850,11)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed FLOW dependence between buffnztemp[*(numint+(*(*?+n*4))*4)] (851:13) and buffnztemp[*(numint+(*(*?+n*4))*4)] (851:13)
         LOOP END

         LOOP BEGIN at ../src/gpu/main.cpp(850,11)
         <Remainder>
         LOOP END

         LOOP BEGIN at ../src/gpu/main.cpp(852,11)
         <Peeled loop for vectorization>
            remark #15301: PEEL LOOP WAS VECTORIZED
         LOOP END

         LOOP BEGIN at ../src/gpu/main.cpp(852,11)
            remark #15300: LOOP WAS VECTORIZED
         LOOP END

         LOOP BEGIN at ../src/gpu/main.cpp(852,11)
         <Remainder loop for vectorization>
            remark #15301: REMAINDER LOOP WAS VECTORIZED
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(879,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/gpu/main.cpp(879,7)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(879,7)
   <Remainder loop for vectorization>
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(882,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/gpu/main.cpp(883,7)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/gpu/main.cpp(884,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(886,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/gpu/main.cpp(887,11)
            remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
         LOOP END
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(890,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(897,9)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at ../src/gpu/main.cpp(898,11)
            remark #15542: loop was not vectorized: inner loop was already vectorized

            LOOP BEGIN at ../src/gpu/main.cpp(898,11)
               remark #15300: LOOP WAS VECTORIZED
            LOOP END

            LOOP BEGIN at ../src/gpu/main.cpp(898,11)
            <Remainder loop for vectorization>
               remark #15301: REMAINDER LOOP WAS VECTORIZED
            LOOP END
         LOOP END

         LOOP BEGIN at ../src/gpu/main.cpp(900,11)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between buffnztemp[buffloc] (903:13) and buffnztemp[buffloc] (904:13)
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(928,5)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/gpu/main.cpp(928,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(928,5)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(945,25)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/gpu/main.cpp(932,5)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/gpu/main.cpp(933,7)
         remark #15523: loop was not vectorized: loop control variable k was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/gpu/main.cpp(936,9)
            remark #15523: loop was not vectorized: loop control variable buff was found, but loop iteration count cannot be computed before executing the loop

            LOOP BEGIN at ../src/gpu/main.cpp(937,11)
               remark #15523: loop was not vectorized: loop control variable row was found, but loop iteration count cannot be computed before executing the loop
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(953,5)
<Peeled loop for vectorization>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(953,5)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(953,5)
<Remainder loop for vectorization>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(966,5)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/gpu/main.cpp(966,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(966,5)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(986,29)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/gpu/main.cpp(970,5)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/gpu/main.cpp(971,7)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/gpu/main.cpp(977,9)
            remark #15523: loop was not vectorized: loop control variable buff was found, but loop iteration count cannot be computed before executing the loop

            LOOP BEGIN at ../src/gpu/main.cpp(978,11)
               remark #15523: loop was not vectorized: loop control variable row was found, but loop iteration count cannot be computed before executing the loop
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(991,5)
<Peeled loop for vectorization>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(991,5)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(991,5)
<Remainder loop for vectorization>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1005,3)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/gpu/main.cpp(1005,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(1005,3)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1015,3)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/gpu/main.cpp(1015,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(1015,3)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1071,3)
<Peeled loop for vectorization>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1071,3)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1071,3)
<Remainder loop for vectorization>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1096,3)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/gpu/main.cpp(1096,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(1096,3)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1202,3)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/gpu/main.cpp(1202,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(1202,3)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1205,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between objall (1207:5) and obj (1207:5)
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1205,3)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: main(int, char **) [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/gpu/main.cpp(242,17)
   remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(267,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between spatll (269:27) and spatll->_M_value[spatcount] (269:27)
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(267,3)
<Remainder>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(276,17)
   remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(301,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between specll (303:27) and specll->_M_value[speccount] (303:27)
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(301,3)
<Remainder>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(324,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between specstart[p] (326:5) and specstart[p-1] (326:5)
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(324,3)
<Remainder>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(328,3)
<Peeled loop for vectorization, Distributed chunk1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(328,3)
<Distributed chunk1>
   remark #15301: PARTIAL LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(328,3)
<Remainder loop for vectorization, Distributed chunk1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(328,3)
<Peeled loop for vectorization, Distributed chunk2>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(328,3)
<Distributed chunk2>
   remark #15301: PARTIAL LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(328,3)
<Remainder loop for vectorization, Distributed chunk2>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(334,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between pixstart[p] (335:5) and pixstart[p-1] (335:5)
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(334,3)
<Remainder>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(342,3)
<Peeled loop for vectorization>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(342,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(342,3)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(347,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(443,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/gpu/main.cpp(462,5)
      remark #15523: loop was not vectorized: loop control variable k was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(467,5)
      remark #15523: loop was not vectorized: loop control variable k was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(478,3)
   remark #15523: loop was not vectorized: loop control variable p was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(491,3)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(531,5)
<Peeled loop for vectorization>
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(531,5)
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(531,5)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(535,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between rowdispl[k] (536:7) and rowdispl[k-1] (536:7)
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(535,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(594,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between rowdispl[m] (595:7) and rowdispl[m-1] (595:7)
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(594,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(597,5)
<Peeled loop for vectorization>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(597,5)
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(597,5)
<Remainder loop for vectorization>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(653,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between blockdispl[block] (654:7) and blockdispl[block-1] (654:7)
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(653,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(656,5)
<Peeled loop for vectorization>
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(656,5)
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(656,5)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(710,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between buffdispl[buff] (711:7) and buffdispl[buff-1] (711:7)
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(710,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(713,5)
<Peeled loop for vectorization>
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(713,5)
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(713,5)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(805,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between blockdispl[block] (806:7) and blockdispl[block-1] (806:7)
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(805,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(808,5)
<Peeled loop for vectorization>
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(808,5)
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(808,5)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(862,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between buffdispl[buff] (863:7) and buffdispl[buff-1] (863:7)
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(862,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(865,5)
<Peeled loop for vectorization>
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(865,5)
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(865,5)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1008,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1008,3)
<Remainder>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1012,3)
   remark #15523: loop was not vectorized: loop control variable k was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1017,3)
   remark #15523: loop was not vectorized: loop control variable k was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1132,5)
   remark #15523: loop was not vectorized: loop control variable iter was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(250,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(250,3)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(253,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(284,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(284,3)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(287,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(355,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(399,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(445,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between domain[0] (451:9) and domain (458:9)

   LOOP BEGIN at ../src/gpu/main.cpp(449,7)
      remark #15523: loop was not vectorized: loop control variable tile was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(492,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between rayrecvstart[p] (494:7) and rayrecvlist[*(rayrecvstart+p*4)+k] (494:7)
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(492,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(502,3)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(502,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(502,3)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(520,19)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification

   LOOP BEGIN at ../src/gpu/main.cpp(514,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between raycoorout[k] (515:33) and domain (527:9)

      LOOP BEGIN at ../src/gpu/main.cpp(518,7)
         remark #15523: loop was not vectorized: loop control variable tile was found, but loop iteration count cannot be computed before executing the loop
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(559,58)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification

   LOOP BEGIN at ../src/gpu/main.cpp(544,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between raycoorout[k] (545:33) and domain (559:9)

      LOOP BEGIN at ../src/gpu/main.cpp(548,7)
         remark #15523: loop was not vectorized: loop control variable tile was found, but loop iteration count cannot be computed before executing the loop
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(577,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/gpu/main.cpp(578,7)
   <Peeled loop for vectorization>
      remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(578,7)
      remark #15300: LOOP WAS VECTORIZED
      remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(578,7)
   <Remainder loop for vectorization>
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(580,5)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/gpu/main.cpp(580,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(580,5)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(583,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between inter (585:7) and inter (586:7)
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(589,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/gpu/main.cpp(590,7)
   <Multiversioned v1>
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between inter (591:9) and inter (591:9)
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(590,7)
   <Remainder, Multiversioned v1>
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(590,7)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(590,7)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(606,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between proj_rowindex[n] (608:7) and rowindex (608:7)
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(606,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(636,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/gpu/main.cpp(637,7)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/gpu/main.cpp(638,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(640,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/gpu/main.cpp(641,11)
            remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
         LOOP END
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(644,9)
      <Peeled loop for vectorization>
         remark #15301: PEEL LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(644,9)
         remark #15300: LOOP WAS VECTORIZED
         remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(644,9)
      <Remainder loop for vectorization>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(671,7)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/gpu/main.cpp(671,7)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(671,7)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(674,7)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/gpu/main.cpp(674,7)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(674,7)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(677,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/gpu/main.cpp(678,7)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/gpu/main.cpp(679,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(681,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/gpu/main.cpp(682,11)
            remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
         LOOP END
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(685,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(695,9)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at ../src/gpu/main.cpp(696,11)
            remark #15542: loop was not vectorized: inner loop was already vectorized

            LOOP BEGIN at ../src/gpu/main.cpp(696,11)
               remark #15300: LOOP WAS VECTORIZED
               remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
            LOOP END

            LOOP BEGIN at ../src/gpu/main.cpp(696,11)
            <Remainder loop for vectorization>
               remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            LOOP END
         LOOP END

         LOOP BEGIN at ../src/gpu/main.cpp(698,11)
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         LOOP END

         LOOP BEGIN at ../src/gpu/main.cpp(698,11)
         <Remainder>
         LOOP END

         LOOP BEGIN at ../src/gpu/main.cpp(700,11)
         <Peeled loop for vectorization>
            remark #15301: PEEL LOOP WAS VECTORIZED
         LOOP END

         LOOP BEGIN at ../src/gpu/main.cpp(700,11)
            remark #15300: LOOP WAS VECTORIZED
            remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
         LOOP END

         LOOP BEGIN at ../src/gpu/main.cpp(700,11)
         <Remainder loop for vectorization>
            remark #15301: REMAINDER LOOP WAS VECTORIZED
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(727,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/gpu/main.cpp(727,7)
      remark #15300: LOOP WAS VECTORIZED
      remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(727,7)
   <Remainder loop for vectorization>
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(730,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/gpu/main.cpp(731,7)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/gpu/main.cpp(732,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(734,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/gpu/main.cpp(735,11)
            remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
         LOOP END
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(738,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(745,9)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at ../src/gpu/main.cpp(746,11)
            remark #15542: loop was not vectorized: inner loop was already vectorized

            LOOP BEGIN at ../src/gpu/main.cpp(746,11)
               remark #15300: LOOP WAS VECTORIZED
               remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
            LOOP END

            LOOP BEGIN at ../src/gpu/main.cpp(746,11)
            <Remainder loop for vectorization>
               remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            LOOP END
         LOOP END

         LOOP BEGIN at ../src/gpu/main.cpp(748,11)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between buffnztemp[buffloc] (751:13) and buffnztemp[buffloc] (752:13)
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(788,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/gpu/main.cpp(789,7)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/gpu/main.cpp(790,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(792,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/gpu/main.cpp(793,11)
            remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
         LOOP END
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(796,9)
      <Peeled loop for vectorization>
         remark #15301: PEEL LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(796,9)
         remark #15300: LOOP WAS VECTORIZED
         remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(796,9)
      <Remainder loop for vectorization>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(823,7)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/gpu/main.cpp(823,7)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(823,7)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(826,7)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/gpu/main.cpp(826,7)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(826,7)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(829,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/gpu/main.cpp(830,7)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/gpu/main.cpp(831,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(833,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/gpu/main.cpp(834,11)
            remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
         LOOP END
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(837,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(847,9)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at ../src/gpu/main.cpp(848,11)
            remark #15542: loop was not vectorized: inner loop was already vectorized

            LOOP BEGIN at ../src/gpu/main.cpp(848,11)
               remark #15300: LOOP WAS VECTORIZED
               remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
            LOOP END

            LOOP BEGIN at ../src/gpu/main.cpp(848,11)
            <Remainder loop for vectorization>
               remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            LOOP END
         LOOP END

         LOOP BEGIN at ../src/gpu/main.cpp(850,11)
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         LOOP END

         LOOP BEGIN at ../src/gpu/main.cpp(850,11)
         <Remainder>
         LOOP END

         LOOP BEGIN at ../src/gpu/main.cpp(852,11)
         <Peeled loop for vectorization>
            remark #15301: PEEL LOOP WAS VECTORIZED
         LOOP END

         LOOP BEGIN at ../src/gpu/main.cpp(852,11)
            remark #15300: LOOP WAS VECTORIZED
            remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
         LOOP END

         LOOP BEGIN at ../src/gpu/main.cpp(852,11)
         <Remainder loop for vectorization>
            remark #15301: REMAINDER LOOP WAS VECTORIZED
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(879,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/gpu/main.cpp(879,7)
      remark #15300: LOOP WAS VECTORIZED
      remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(879,7)
   <Remainder loop for vectorization>
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(882,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/gpu/main.cpp(883,7)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/gpu/main.cpp(884,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(886,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/gpu/main.cpp(887,11)
            remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
         LOOP END
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(890,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(897,9)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at ../src/gpu/main.cpp(898,11)
            remark #15542: loop was not vectorized: inner loop was already vectorized

            LOOP BEGIN at ../src/gpu/main.cpp(898,11)
               remark #15300: LOOP WAS VECTORIZED
               remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
            LOOP END

            LOOP BEGIN at ../src/gpu/main.cpp(898,11)
            <Remainder loop for vectorization>
               remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            LOOP END
         LOOP END

         LOOP BEGIN at ../src/gpu/main.cpp(900,11)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between buffnztemp[buffloc] (903:13) and buffnztemp[buffloc] (904:13)
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(928,5)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/gpu/main.cpp(928,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(928,5)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(945,25)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/gpu/main.cpp(932,5)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/gpu/main.cpp(933,7)
         remark #15523: loop was not vectorized: loop control variable k was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/gpu/main.cpp(936,9)
            remark #15523: loop was not vectorized: loop control variable buff was found, but loop iteration count cannot be computed before executing the loop

            LOOP BEGIN at ../src/gpu/main.cpp(937,11)
               remark #15523: loop was not vectorized: loop control variable row was found, but loop iteration count cannot be computed before executing the loop
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(953,5)
<Peeled loop for vectorization>
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(953,5)
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(953,5)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(966,5)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/gpu/main.cpp(966,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(966,5)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(986,29)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/gpu/main.cpp(970,5)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/gpu/main.cpp(971,7)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/gpu/main.cpp(977,9)
            remark #15523: loop was not vectorized: loop control variable buff was found, but loop iteration count cannot be computed before executing the loop

            LOOP BEGIN at ../src/gpu/main.cpp(978,11)
               remark #15523: loop was not vectorized: loop control variable row was found, but loop iteration count cannot be computed before executing the loop
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(991,5)
<Peeled loop for vectorization>
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(991,5)
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(991,5)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1005,3)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/gpu/main.cpp(1005,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(1005,3)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1015,3)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/gpu/main.cpp(1015,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(1015,3)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1071,3)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1071,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1071,3)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1096,3)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/gpu/main.cpp(1096,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(1096,3)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1202,3)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/gpu/main.cpp(1202,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(1202,3)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1205,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between objall (1207:5) and obj (1207:5)
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1205,3)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: main(int, char **) [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/gpu/main.cpp(242,17)
   remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(267,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between spatll (269:27) and spatll->_M_value[spatcount] (269:27)
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(267,3)
<Remainder>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(276,17)
   remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(301,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between specll (303:27) and specll->_M_value[speccount] (303:27)
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(301,3)
<Remainder>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(324,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between specstart[p] (326:5) and specstart[p-1] (326:5)
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(324,3)
<Remainder>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(328,3)
<Peeled loop for vectorization, Distributed chunk1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(328,3)
<Distributed chunk1>
   remark #15301: PARTIAL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(328,3)
<Remainder loop for vectorization, Distributed chunk1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(328,3)
<Peeled loop for vectorization, Distributed chunk2>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(328,3)
<Distributed chunk2>
   remark #15301: PARTIAL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(328,3)
<Remainder loop for vectorization, Distributed chunk2>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(334,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between pixstart[p] (335:5) and pixstart[p-1] (335:5)
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(334,3)
<Remainder>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(342,3)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(342,3)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(342,3)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(347,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(443,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/gpu/main.cpp(462,5)
      remark #15523: loop was not vectorized: loop control variable k was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(467,5)
      remark #15523: loop was not vectorized: loop control variable k was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(478,3)
   remark #15523: loop was not vectorized: loop control variable p was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(491,3)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(531,5)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(531,5)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(531,5)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(535,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between rowdispl[k] (536:7) and rowdispl[k-1] (536:7)
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(535,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(594,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between rowdispl[m] (595:7) and rowdispl[m-1] (595:7)
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(594,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(597,5)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(597,5)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(597,5)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(653,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between blockdispl[block] (654:7) and blockdispl[block-1] (654:7)
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(653,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(656,5)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(656,5)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(656,5)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(710,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between buffdispl[buff] (711:7) and buffdispl[buff-1] (711:7)
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(710,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(713,5)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(713,5)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(713,5)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(805,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between blockdispl[block] (806:7) and blockdispl[block-1] (806:7)
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(805,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(808,5)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(808,5)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(808,5)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(862,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between buffdispl[buff] (863:7) and buffdispl[buff-1] (863:7)
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(862,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(865,5)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(865,5)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(865,5)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1008,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between raynumray[*(rayrecvlist+k*4)] (1009:5) and raynumray[*(rayrecvlist+k*4)] (1009:5)
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1008,3)
<Remainder>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1012,3)
   remark #15523: loop was not vectorized: loop control variable k was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1017,3)
   remark #15523: loop was not vectorized: loop control variable k was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1132,5)
   remark #15523: loop was not vectorized: loop control variable iter was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(250,3)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(250,3)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(253,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(284,3)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(284,3)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(287,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(355,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(399,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(445,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between domain[0] (451:9) and domain (458:9)

   LOOP BEGIN at ../src/gpu/main.cpp(449,7)
      remark #15523: loop was not vectorized: loop control variable tile was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(492,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between rayrecvstart[p] (494:7) and rayrecvlist[*(rayrecvstart+p*4)+k] (494:7)
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(492,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(502,3)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(502,3)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(502,3)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(520,19)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification

   LOOP BEGIN at ../src/gpu/main.cpp(514,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between raycoorout[k] (515:33) and domain (527:9)

      LOOP BEGIN at ../src/gpu/main.cpp(518,7)
         remark #15523: loop was not vectorized: loop control variable tile was found, but loop iteration count cannot be computed before executing the loop
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(559,58)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification

   LOOP BEGIN at ../src/gpu/main.cpp(544,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between raycoorout[k] (545:33) and domain (559:9)

      LOOP BEGIN at ../src/gpu/main.cpp(548,7)
         remark #15523: loop was not vectorized: loop control variable tile was found, but loop iteration count cannot be computed before executing the loop
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(577,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/gpu/main.cpp(578,7)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(578,7)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(578,7)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(580,5)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/gpu/main.cpp(580,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(580,5)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(583,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between inter (585:7) and inter (586:7)
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(589,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/gpu/main.cpp(590,7)
   <Multiversioned v1>
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between inter (591:9) and inter (591:9)
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(590,7)
   <Remainder, Multiversioned v1>
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(590,7)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(590,7)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(606,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between proj_rowindex[n] (608:7) and rowindex (608:7)
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(606,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(636,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/gpu/main.cpp(637,7)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/gpu/main.cpp(638,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(640,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/gpu/main.cpp(641,11)
            remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
         LOOP END
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(644,9)
      <Peeled loop for vectorization>
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(644,9)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(644,9)
      <Remainder loop for vectorization>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(644,9)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(671,7)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/gpu/main.cpp(671,7)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(671,7)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(674,7)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/gpu/main.cpp(674,7)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(674,7)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(677,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/gpu/main.cpp(678,7)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/gpu/main.cpp(679,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(681,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/gpu/main.cpp(682,11)
            remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
         LOOP END
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(685,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(695,9)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at ../src/gpu/main.cpp(696,11)
            remark #15542: loop was not vectorized: inner loop was already vectorized

            LOOP BEGIN at ../src/gpu/main.cpp(696,11)
               remark #15300: LOOP WAS VECTORIZED
            LOOP END

            LOOP BEGIN at ../src/gpu/main.cpp(696,11)
            <Remainder loop for vectorization>
            LOOP END
         LOOP END

         LOOP BEGIN at ../src/gpu/main.cpp(698,11)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed FLOW dependence between buffnztemp[*(numint+(*(*?+n*4))*4)] (699:13) and buffnztemp[*(numint+(*(*?+n*4))*4)] (699:13)
         LOOP END

         LOOP BEGIN at ../src/gpu/main.cpp(698,11)
         <Remainder>
         LOOP END

         LOOP BEGIN at ../src/gpu/main.cpp(700,11)
         <Peeled loop for vectorization>
         LOOP END

         LOOP BEGIN at ../src/gpu/main.cpp(700,11)
            remark #15300: LOOP WAS VECTORIZED
         LOOP END

         LOOP BEGIN at ../src/gpu/main.cpp(700,11)
         <Remainder loop for vectorization>
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(727,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/gpu/main.cpp(727,7)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(727,7)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(730,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/gpu/main.cpp(731,7)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/gpu/main.cpp(732,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(734,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/gpu/main.cpp(735,11)
            remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
         LOOP END
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(738,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(745,9)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at ../src/gpu/main.cpp(746,11)
            remark #15542: loop was not vectorized: inner loop was already vectorized

            LOOP BEGIN at ../src/gpu/main.cpp(746,11)
               remark #15300: LOOP WAS VECTORIZED
            LOOP END

            LOOP BEGIN at ../src/gpu/main.cpp(746,11)
            <Remainder loop for vectorization>
            LOOP END
         LOOP END

         LOOP BEGIN at ../src/gpu/main.cpp(748,11)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between buffnztemp[buffloc] (751:13) and buffnztemp[buffloc] (752:13)
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(788,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/gpu/main.cpp(789,7)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/gpu/main.cpp(790,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(792,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/gpu/main.cpp(793,11)
            remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
         LOOP END
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(796,9)
      <Peeled loop for vectorization>
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(796,9)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(796,9)
      <Remainder loop for vectorization>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(796,9)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(823,7)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/gpu/main.cpp(823,7)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(823,7)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(826,7)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/gpu/main.cpp(826,7)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(826,7)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(829,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/gpu/main.cpp(830,7)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/gpu/main.cpp(831,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(833,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/gpu/main.cpp(834,11)
            remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
         LOOP END
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(837,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(847,9)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at ../src/gpu/main.cpp(848,11)
            remark #15542: loop was not vectorized: inner loop was already vectorized

            LOOP BEGIN at ../src/gpu/main.cpp(848,11)
               remark #15300: LOOP WAS VECTORIZED
            LOOP END

            LOOP BEGIN at ../src/gpu/main.cpp(848,11)
            <Remainder loop for vectorization>
            LOOP END
         LOOP END

         LOOP BEGIN at ../src/gpu/main.cpp(850,11)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed FLOW dependence between buffnztemp[*(numint+(*(*?+n*4))*4)] (851:13) and buffnztemp[*(numint+(*(*?+n*4))*4)] (851:13)
         LOOP END

         LOOP BEGIN at ../src/gpu/main.cpp(850,11)
         <Remainder>
         LOOP END

         LOOP BEGIN at ../src/gpu/main.cpp(852,11)
         <Peeled loop for vectorization>
         LOOP END

         LOOP BEGIN at ../src/gpu/main.cpp(852,11)
            remark #15300: LOOP WAS VECTORIZED
         LOOP END

         LOOP BEGIN at ../src/gpu/main.cpp(852,11)
         <Remainder loop for vectorization>
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(879,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/gpu/main.cpp(879,7)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(879,7)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(882,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/gpu/main.cpp(883,7)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/gpu/main.cpp(884,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(886,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/gpu/main.cpp(887,11)
            remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
         LOOP END
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(890,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(897,9)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at ../src/gpu/main.cpp(898,11)
            remark #15542: loop was not vectorized: inner loop was already vectorized

            LOOP BEGIN at ../src/gpu/main.cpp(898,11)
               remark #15300: LOOP WAS VECTORIZED
            LOOP END

            LOOP BEGIN at ../src/gpu/main.cpp(898,11)
            <Remainder loop for vectorization>
            LOOP END
         LOOP END

         LOOP BEGIN at ../src/gpu/main.cpp(900,11)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between buffnztemp[buffloc] (903:13) and buffnztemp[buffloc] (904:13)
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(928,5)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/gpu/main.cpp(928,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(928,5)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(945,25)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/gpu/main.cpp(932,5)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/gpu/main.cpp(933,7)
         remark #15523: loop was not vectorized: loop control variable k was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/gpu/main.cpp(936,9)
            remark #15523: loop was not vectorized: loop control variable buff was found, but loop iteration count cannot be computed before executing the loop

            LOOP BEGIN at ../src/gpu/main.cpp(937,11)
               remark #15523: loop was not vectorized: loop control variable row was found, but loop iteration count cannot be computed before executing the loop
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(953,5)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(953,5)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(953,5)
<Remainder loop for vectorization>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(953,5)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(966,5)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/gpu/main.cpp(966,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(966,5)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(986,29)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/gpu/main.cpp(970,5)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/gpu/main.cpp(971,7)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/gpu/main.cpp(977,9)
            remark #15523: loop was not vectorized: loop control variable buff was found, but loop iteration count cannot be computed before executing the loop

            LOOP BEGIN at ../src/gpu/main.cpp(978,11)
               remark #15523: loop was not vectorized: loop control variable row was found, but loop iteration count cannot be computed before executing the loop
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(991,5)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(991,5)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(991,5)
<Remainder loop for vectorization>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(991,5)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1005,3)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/gpu/main.cpp(1005,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(1005,3)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1015,3)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/gpu/main.cpp(1015,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(1015,3)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1071,3)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1071,3)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1071,3)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1096,3)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/gpu/main.cpp(1096,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(1096,3)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1202,3)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/gpu/main.cpp(1202,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(1202,3)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1205,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between objall (1207:5) and obj (1207:5)
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1205,3)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: main(int, char **) [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/gpu/main.cpp(242,17)
   remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(267,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between spatll (269:27) and spatll->_M_value[spatcount] (269:27)
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(267,3)
<Remainder>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(276,17)
   remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(301,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between specll (303:27) and specll->_M_value[speccount] (303:27)
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(301,3)
<Remainder>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(324,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between specstart[p] (326:5) and specstart[p-1] (326:5)
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(324,3)
<Remainder>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(328,3)
<Peeled loop for vectorization, Distributed chunk1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(328,3)
<Distributed chunk1>
   remark #15301: PARTIAL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(328,3)
<Alternate Alignment Vectorized Loop, Distributed chunk1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(328,3)
<Remainder loop for vectorization, Distributed chunk1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(328,3)
<Peeled loop for vectorization, Distributed chunk2>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(328,3)
<Distributed chunk2>
   remark #15301: PARTIAL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(328,3)
<Alternate Alignment Vectorized Loop, Distributed chunk2>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(328,3)
<Remainder loop for vectorization, Distributed chunk2>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(334,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between pixstart[p] (335:5) and pixstart[p-1] (335:5)
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(334,3)
<Remainder>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(342,3)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(342,3)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(342,3)
<Alternate Alignment Vectorized Loop>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(342,3)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(347,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(443,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/gpu/main.cpp(462,5)
      remark #15523: loop was not vectorized: loop control variable k was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(467,5)
      remark #15523: loop was not vectorized: loop control variable k was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(478,3)
   remark #15523: loop was not vectorized: loop control variable p was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(491,3)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(531,5)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(531,5)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(531,5)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(535,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between rowdispl[k] (536:7) and rowdispl[k-1] (536:7)
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(535,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(594,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between rowdispl[m] (595:7) and rowdispl[m-1] (595:7)
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(594,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(597,5)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(597,5)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(597,5)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(653,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between blockdispl[block] (654:7) and blockdispl[block-1] (654:7)
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(653,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(656,5)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(656,5)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(656,5)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(710,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between buffdispl[buff] (711:7) and buffdispl[buff-1] (711:7)
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(710,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(713,5)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(713,5)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(713,5)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(805,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between blockdispl[block] (806:7) and blockdispl[block-1] (806:7)
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(805,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(808,5)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(808,5)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(808,5)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(862,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between buffdispl[buff] (863:7) and buffdispl[buff-1] (863:7)
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(862,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(865,5)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(865,5)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(865,5)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1008,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between raynumray[*(rayrecvlist+k*4)] (1009:5) and raynumray[*(rayrecvlist+k*4)] (1009:5)
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1008,3)
<Remainder>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1012,3)
   remark #15523: loop was not vectorized: loop control variable k was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1017,3)
   remark #15523: loop was not vectorized: loop control variable k was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1132,5)
   remark #15523: loop was not vectorized: loop control variable iter was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(250,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(250,3)
<Remainder>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(253,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(284,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(284,3)
<Remainder>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(287,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(355,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(399,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(445,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between domain[0] (451:9) and domain (458:9)

   LOOP BEGIN at ../src/gpu/main.cpp(449,7)
      remark #15523: loop was not vectorized: loop control variable tile was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(492,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between rayrecvstart[p] (494:7) and rayrecvlist[*(rayrecvstart+p*4)+k] (494:7)
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(492,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(502,3)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(502,3)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(502,3)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(520,19)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification

   LOOP BEGIN at ../src/gpu/main.cpp(514,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between raycoorout[k] (515:33) and domain (527:9)

      LOOP BEGIN at ../src/gpu/main.cpp(518,7)
         remark #15523: loop was not vectorized: loop control variable tile was found, but loop iteration count cannot be computed before executing the loop
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(559,58)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification

   LOOP BEGIN at ../src/gpu/main.cpp(544,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between raycoorout[k] (545:33) and domain (559:9)

      LOOP BEGIN at ../src/gpu/main.cpp(548,7)
         remark #15523: loop was not vectorized: loop control variable tile was found, but loop iteration count cannot be computed before executing the loop
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(577,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/gpu/main.cpp(578,7)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(578,7)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(578,7)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(580,5)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/gpu/main.cpp(580,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(580,5)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(583,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between inter (585:7) and inter (586:7)
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(589,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/gpu/main.cpp(590,7)
   <Multiversioned v1>
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between inter (591:9) and inter (591:9)
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(590,7)
   <Remainder, Multiversioned v1>
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(590,7)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(590,7)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(606,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between proj_rowindex[n] (608:7) and rowindex (608:7)
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(606,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(636,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/gpu/main.cpp(637,7)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/gpu/main.cpp(638,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(640,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/gpu/main.cpp(641,11)
            remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
         LOOP END
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(644,9)
      <Peeled loop for vectorization>
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(644,9)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(644,9)
      <Remainder loop for vectorization>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(644,9)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(671,7)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/gpu/main.cpp(671,7)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(671,7)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(674,7)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/gpu/main.cpp(674,7)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(674,7)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(677,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/gpu/main.cpp(678,7)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/gpu/main.cpp(679,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(681,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/gpu/main.cpp(682,11)
            remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
         LOOP END
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(685,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(695,9)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at ../src/gpu/main.cpp(696,11)
            remark #15542: loop was not vectorized: inner loop was already vectorized

            LOOP BEGIN at ../src/gpu/main.cpp(696,11)
               remark #15300: LOOP WAS VECTORIZED
            LOOP END

            LOOP BEGIN at ../src/gpu/main.cpp(696,11)
            <Remainder loop for vectorization>
            LOOP END
         LOOP END

         LOOP BEGIN at ../src/gpu/main.cpp(698,11)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed FLOW dependence between buffnztemp[*(numint+(*(*?+n*4))*4)] (699:13) and buffnztemp[*(numint+(*(*?+n*4))*4)] (699:13)
         LOOP END

         LOOP BEGIN at ../src/gpu/main.cpp(698,11)
         <Remainder>
         LOOP END

         LOOP BEGIN at ../src/gpu/main.cpp(700,11)
         <Peeled loop for vectorization>
         LOOP END

         LOOP BEGIN at ../src/gpu/main.cpp(700,11)
            remark #15300: LOOP WAS VECTORIZED
         LOOP END

         LOOP BEGIN at ../src/gpu/main.cpp(700,11)
         <Alternate Alignment Vectorized Loop>
         LOOP END

         LOOP BEGIN at ../src/gpu/main.cpp(700,11)
         <Remainder loop for vectorization>
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(727,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/gpu/main.cpp(727,7)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(727,7)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(730,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/gpu/main.cpp(731,7)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/gpu/main.cpp(732,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(734,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/gpu/main.cpp(735,11)
            remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
         LOOP END
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(738,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(745,9)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at ../src/gpu/main.cpp(746,11)
            remark #15542: loop was not vectorized: inner loop was already vectorized

            LOOP BEGIN at ../src/gpu/main.cpp(746,11)
               remark #15300: LOOP WAS VECTORIZED
            LOOP END

            LOOP BEGIN at ../src/gpu/main.cpp(746,11)
            <Remainder loop for vectorization>
            LOOP END
         LOOP END

         LOOP BEGIN at ../src/gpu/main.cpp(748,11)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between buffnztemp[buffloc] (751:13) and buffnztemp[buffloc] (752:13)
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(788,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/gpu/main.cpp(789,7)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/gpu/main.cpp(790,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(792,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/gpu/main.cpp(793,11)
            remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
         LOOP END
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(796,9)
      <Peeled loop for vectorization>
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(796,9)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(796,9)
      <Remainder loop for vectorization>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(796,9)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(823,7)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/gpu/main.cpp(823,7)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(823,7)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(826,7)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/gpu/main.cpp(826,7)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(826,7)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(829,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/gpu/main.cpp(830,7)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/gpu/main.cpp(831,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(833,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/gpu/main.cpp(834,11)
            remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
         LOOP END
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(837,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(847,9)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at ../src/gpu/main.cpp(848,11)
            remark #15542: loop was not vectorized: inner loop was already vectorized

            LOOP BEGIN at ../src/gpu/main.cpp(848,11)
               remark #15300: LOOP WAS VECTORIZED
            LOOP END

            LOOP BEGIN at ../src/gpu/main.cpp(848,11)
            <Remainder loop for vectorization>
            LOOP END
         LOOP END

         LOOP BEGIN at ../src/gpu/main.cpp(850,11)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed FLOW dependence between buffnztemp[*(numint+(*(*?+n*4))*4)] (851:13) and buffnztemp[*(numint+(*(*?+n*4))*4)] (851:13)
         LOOP END

         LOOP BEGIN at ../src/gpu/main.cpp(850,11)
         <Remainder>
         LOOP END

         LOOP BEGIN at ../src/gpu/main.cpp(852,11)
         <Peeled loop for vectorization>
         LOOP END

         LOOP BEGIN at ../src/gpu/main.cpp(852,11)
            remark #15300: LOOP WAS VECTORIZED
         LOOP END

         LOOP BEGIN at ../src/gpu/main.cpp(852,11)
         <Alternate Alignment Vectorized Loop>
         LOOP END

         LOOP BEGIN at ../src/gpu/main.cpp(852,11)
         <Remainder loop for vectorization>
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(879,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/gpu/main.cpp(879,7)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(879,7)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(882,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/gpu/main.cpp(883,7)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/gpu/main.cpp(884,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(886,9)
         remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/gpu/main.cpp(887,11)
            remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
         LOOP END
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(890,9)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at ../src/gpu/main.cpp(897,9)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at ../src/gpu/main.cpp(898,11)
            remark #15542: loop was not vectorized: inner loop was already vectorized

            LOOP BEGIN at ../src/gpu/main.cpp(898,11)
               remark #15300: LOOP WAS VECTORIZED
            LOOP END

            LOOP BEGIN at ../src/gpu/main.cpp(898,11)
            <Remainder loop for vectorization>
            LOOP END
         LOOP END

         LOOP BEGIN at ../src/gpu/main.cpp(900,11)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between buffnztemp[buffloc] (903:13) and buffnztemp[buffloc] (904:13)
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(928,5)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/gpu/main.cpp(928,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(928,5)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(945,25)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/gpu/main.cpp(932,5)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/gpu/main.cpp(933,7)
         remark #15523: loop was not vectorized: loop control variable k was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/gpu/main.cpp(936,9)
            remark #15523: loop was not vectorized: loop control variable buff was found, but loop iteration count cannot be computed before executing the loop

            LOOP BEGIN at ../src/gpu/main.cpp(937,11)
               remark #15523: loop was not vectorized: loop control variable row was found, but loop iteration count cannot be computed before executing the loop
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(953,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(953,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(966,5)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/gpu/main.cpp(966,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(966,5)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(986,29)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/gpu/main.cpp(970,5)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/gpu/main.cpp(971,7)
         remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ../src/gpu/main.cpp(977,9)
            remark #15523: loop was not vectorized: loop control variable buff was found, but loop iteration count cannot be computed before executing the loop

            LOOP BEGIN at ../src/gpu/main.cpp(978,11)
               remark #15523: loop was not vectorized: loop control variable row was found, but loop iteration count cannot be computed before executing the loop
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(991,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(991,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1005,3)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/gpu/main.cpp(1005,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(1005,3)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1015,3)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/gpu/main.cpp(1015,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(1015,3)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1071,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1071,3)
<Remainder>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1096,3)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/gpu/main.cpp(1096,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(1096,3)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1202,3)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ../src/gpu/main.cpp(1202,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at ../src/gpu/main.cpp(1202,3)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1205,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between objall (1207:5) and obj (1207:5)
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1205,3)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: subtract_kernel(float *, float *, float *, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/gpu/main.cpp(1247,3)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1247,3)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1247,3)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1247,3)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1247,3)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: subtract_kernel(float *, float *, float *, int) [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/gpu/main.cpp(1247,3)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1247,3)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1247,3)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1247,3)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1247,3)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: subtract_kernel(float *, float *, float *, int) [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/gpu/main.cpp(1247,3)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1247,3)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1247,3)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1247,3)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1247,3)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: subtract_kernel(float *, float *, float *, int) [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/gpu/main.cpp(1247,3)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1247,3)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1247,3)
<Alternate Alignment Vectorized Loop, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1247,3)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1247,3)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1247,3)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: saxpy_kernel(float *, float *, float, float *, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/gpu/main.cpp(1237,3)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1237,3)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1237,3)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1237,3)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1237,3)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: saxpy_kernel(float *, float *, float, float *, int) [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/gpu/main.cpp(1237,3)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1237,3)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1237,3)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1237,3)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1237,3)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: saxpy_kernel(float *, float *, float, float *, int) [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/gpu/main.cpp(1237,3)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1237,3)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1237,3)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1237,3)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1237,3)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: saxpy_kernel(float *, float *, float, float *, int) [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/gpu/main.cpp(1237,3)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1237,3)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1237,3)
<Alternate Alignment Vectorized Loop, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1237,3)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1237,3)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1237,3)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: norm_kernel(float *, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/gpu/main.cpp(1224,3)
<Peeled loop for vectorization>
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1224,3)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1224,3)
<Remainder loop for vectorization>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END
===========================================================================

Begin optimization report for: norm_kernel(float *, int) [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/gpu/main.cpp(1224,3)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1224,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1224,3)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END
===========================================================================

Begin optimization report for: norm_kernel(float *, int) [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/gpu/main.cpp(1224,3)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1224,3)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1224,3)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END
===========================================================================

Begin optimization report for: norm_kernel(float *, int) [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/gpu/main.cpp(1224,3)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1224,3)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1224,3)
<Remainder loop for vectorization>
LOOP END
===========================================================================

Begin optimization report for: dot_kernel(float *, float *, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/gpu/main.cpp(1231,3)
<Peeled loop for vectorization>
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1231,3)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1231,3)
<Remainder loop for vectorization>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END
===========================================================================

Begin optimization report for: dot_kernel(float *, float *, int) [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/gpu/main.cpp(1231,3)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1231,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1231,3)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END
===========================================================================

Begin optimization report for: dot_kernel(float *, float *, int) [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/gpu/main.cpp(1231,3)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1231,3)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1231,3)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END
===========================================================================

Begin optimization report for: dot_kernel(float *, float *, int) [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/gpu/main.cpp(1231,3)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1231,3)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1231,3)
<Alternate Alignment Vectorized Loop>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1231,3)
<Remainder loop for vectorization>
LOOP END
===========================================================================

Begin optimization report for: __$U0

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U0 [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U0 [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U0 [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U1

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U1 [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U1 [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U1 [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U2

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U2 [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U2 [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U2 [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U3

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U3 [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U3 [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U3 [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U4

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U4 [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U4 [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U4 [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U5

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U5 [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U5 [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U5 [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U6

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U6 [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U6 [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U6 [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U7

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U7 [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U7 [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: __$U7 [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1220,1)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: copy_kernel(float *, float *, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/gpu/main.cpp(1242,3)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1242,3)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1242,3)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1242,3)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1242,3)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: copy_kernel(float *, float *, int) [skylake_avx512]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/gpu/main.cpp(1242,3)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1242,3)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
   remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1242,3)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1242,3)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1242,3)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: copy_kernel(float *, float *, int) [haswell]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/gpu/main.cpp(1242,3)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1242,3)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1242,3)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1242,3)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1242,3)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: copy_kernel(float *, float *, int) [generic]

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/gpu/main.cpp(1242,3)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1242,3)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1242,3)
<Alternate Alignment Vectorized Loop, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1242,3)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1242,3)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/gpu/main.cpp(1242,3)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================
